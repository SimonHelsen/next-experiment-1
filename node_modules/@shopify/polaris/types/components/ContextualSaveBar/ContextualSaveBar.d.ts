import * as React from 'react';
import { FrameContext } from '../Frame';
interface ContextualSaveBarAction {
    /** A destination to link to */
    url?: string;
    /** Content the action displays */
    content?: string;
    /** Should a spinner be displayed */
    loading?: boolean;
    /** Should the action be disabled */
    disabled?: boolean;
    /** Callback when an action takes place */
    onAction?(): void;
}
interface ContextualSaveBarDiscardActionProps {
    /** Whether to show a modal confirming the discard action */
    discardConfirmationModal?: boolean;
}
declare type ContextualSaveBarCombinedActionProps = ContextualSaveBarDiscardActionProps & ContextualSaveBarAction;
export interface Props {
    /** Extend the contents section to be flush with the left edge  */
    alignContentFlush?: boolean;
    /** Accepts a string of content that will be rendered to the left of the actions */
    message?: string;
    /** Save or commit contextual save bar action with text defaulting to 'Save' */
    saveAction?: ContextualSaveBarAction;
    /** Discard or cancel contextual save bar action with text defaulting to 'Discard' */
    discardAction?: ContextualSaveBarCombinedActionProps;
}
declare class ContextualSaveBar extends React.PureComponent<Props, never> {
    static contextTypes: {
        frame: any;
    };
    context: FrameContext;
    componentDidMount(): void;
    componentWillUnmount(): void;
    componentDidUpdate(oldProps: Props): void;
    render(): null;
}
export default ContextualSaveBar;
